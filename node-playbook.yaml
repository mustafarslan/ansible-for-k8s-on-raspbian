---
- host: workers
  become: true
  tasks:
   - name: Install packages that allow apt to be used over HTTPS
     apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
   - name: Add an apt signing key for Docker
     apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
   - name: Add apt repository for stable version
     apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
   - name: Install docker and its dependecies
     apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
       - docker-ce
        - docker-ce-cli
        - containerd.io 
     notify:
      - docker status
   - name: Add pi user to docker group
     user:
      name: pi
      group: docker
   - name: Change to docker group
     user: name={{ansible_user}} groups=docker
   - name: reset ssh connection to allow user changes to affect 'current login user'
     meta: reset_connection
   - name: Remove swapfile from /etc/fstab
     mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
     with_items:
      - swap
      - none
   - name: Disable swap
     command: swapoff -a
     when: ansible_swaptotal_mb > 0
   - name: Edit '/boot/cmdline.txt'
     lineinfile: 
      path: /boot/cmdline.txt
      backup: true
      backrefs: true
      state: present
      regexp: 'dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=PARTUUID=e800c349-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait'
      line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
   - name: Reboot
     reboot:
   - name: Add an apt signing key for Kubernetes
     apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
   - name: Adding apt repository for Kubernetes
     apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
   - name: Install Kubernetes binaries
     apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
     vars:
      packages:
       - kubelet 
       - kubeadm 
       - kubectl
   - name: Configure node ip
     lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
     vars:
      node_ip:
       - 192.168.1.26
       - 192.168.1.27
   - name: Restart kubelet
     service:
      name: kubelet
      daemon_reload: yes
      state: restarted
   - name: Copy the join command to server location
     copy: src=join-command dest=/tmp/join-command.sh mode=0777
   - name: Join the node to cluster
     command: sh /tmp/join-command.sh
  handlers:
   - name: docker status
     service: name=docker state=started