---
- hosts: master
  become: true
  tasks:
    - name: Change host name on '/etc/hostname'
      replace:
        path: /etc/hostname
        regexp: 'raspberrypi'
        replace: 'k8s-master'
    - name: Update '/etc/hosts' with new hostname
      replace:
        path: /etc/hosts
        regexp: 'raspberrypi'
        replace: 'k8s-master'
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    - name: Add an apt signing key for Docker
      sudo: true
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
    - name: Add apt repository for stable version
      apt_repository:
        repo: 'deb [arch=amd64] https://download.docker.com/linux/debian buster stable'
        state: present
    - name: Run the equivalent of "apt-get update" as a separate step
      sudo: true
      apt:
       update_cache: yes
    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker.io
      notify:
        - docker status
    - name: Add pi user to docker group
      sudo: true
      user:
        name: pi
        group: docker
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl
    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted
    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="192.168.1.25" --apiserver-cert-extra-sans="192.168.1.25"  --node-name k8s-master --pod-network-cidr=192.168.1.25/16
    - name: Configure node ip
      sudo: true
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip=192.168.1.25
    - name: Install calico pod network
      become: false
      command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml
    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
  handlers:
   - name: docker status
     service: name=docker state=started